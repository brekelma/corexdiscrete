{
  "id": "ae8ee36c-0bd2-3976-9bd3-edc3bbc67433",
  "name": "dsbox.corexdiscrete.corex_discrete.corexdiscrete",
  "common_name": "DSBox Corex Discrete",
  "description": "Return components/latent factors that explain the most multivariate mutual information in the data. For comparison, PCA returns components explaining the most variance in the data.",
  "languages": [
    "python2.7"
  ],
  "library": "dsbox",
  "version": "0.1.5",
  "source_code": "https://github.com/brekelma/corexdiscrete.git",
  "is_class": true,
  "attributes": [
    {
      "shape": "n_hidden, n_samples",
      "type": "array",
      "name": "labels",
      "description": "Label (i.e. highest probability value) of each hidden unit for each sample.  Note, hidden units are binary by default, so label in {0,1}."
    }, 
    {
      "shape": "n_hidden, n_samples, dim_hidden",
      "type": "array",
      "name": "p_y_given_x",
      "description": "The distribution of hidden unit activations for each sample."
    },
    {
      "shape": "n_features",
      "type": "array",
      "name": "clusters",
      "description": "Cluster label for each input variable."
    },
    {
      "shape": "n_features, n_hidden",
      "type": "array",
      "name": "alpha",
      "description": "Adjacency matrix between input variables and hidden units (values in [0,1], defining structure of the model)."
    }
  ],
  "parameters": [
    {
      "type": "int",
      "name": "n_hidden",
      "description": "Number of components or latent factors to use.",
      "is_hyperparameter": true
    },
     {
      "type": "int",
      "name": "dim_hidden",
      "description": "Each hidden unit can take dim_hidden discrete values.",
      "is_hyperparameter": true
    },
    {
      "type": "int",
      "name": "max_iter",
      "description": "Maximum number of iterations taken for the solvers to converge. ",
      "is_hyperparameter": false
    },
    {
      "type": "int",
      "name": "seed",
      "description": "The seed of the pseudo random number generator to use. ",
      "is_hyperparameter": false
    },
    {
      "type": "float",
      "name": "tol",
      "description": "Tolerance for stopping criteria. ",
      "is_hyperparameter": false
    },
    {
      "type": "int",
      "name": "verbose",
      "description": "Set true for verbose output or >1 to get even more verbosity.",
      "is_hyperparameter": false
    }
  ],
  "methods_available": [
    {
      "name": "fit",
      "id": "dsbox.corexdiscrete.corexdiscrete.corex.CorexDiscrete.fit",
      "description": "'Fit the model according to the given training data.\n",
      "returns": {
        "type": "object",
        "name": "self",
        "description": "Returns self. '"
        },
      "parameters": [
        {
          "shape": "n_samples, n_features",
          "type": "array-like, sparse matrix",
          "name": "X",
          "description": "Training vector, where n_samples is the number of samples and n_features is the number of features. ",
          "is_hyperparameter": false
        }
        ]
    },
    {
      "name": "transform",
      "id": "dsbox.corexdiscrete.corexdiscrete.corex.CorexDiscrete.transform",
      "description": "'Transform data according to learned model.\n",
      "returns": {
        "type": "array-like",
        "shape": "n_hidden, n_features",
        "name": "Y",
        "description": "Returns latent factors/components for each sample. '"
      },
      "parameters": [
        {
          "shape": "n_samples, n_features",
          "type": "array-like, sparse matrix",
          "name": "X",
          "description": "Training vector, where n_samples is the number of samples and n_features is the number of features. ",
          "is_hyperparameter": false
        }
        ]
      }, 
      {
      "name": "fit_transform",
      "id": "dsbox.corexdiscrete.corexdiscrete.corex.CorexDiscrete.fit_transform",
      "description": "'Fit model to given training data and transform data according to learned model.\n",
      "returns": {
        "type": "array-like",
        "shape": "n_hidden, n_features",
        "name": "Y",
        "description": "Returns latent factors/components for each sample."
      },
      "parameters": [
        {
          "shape": "n_samples, n_features",
          "type": "array-like, sparse matrix",
          "name": "X",
          "description": "Training vector, where n_samples is the number of samples and n_features is the number of features. ",
          "is_hyperparameter": false
        }
        ]
      }
    ],
  "algorithm_type": ["Dimensionality Reduction"],
  "learning_type": ["Unsupervised learning"],
  "task_type": ["Feature extraction"],
  "tags": [
    "factor analysis"
  ],
  "is_deterministic": false,
  "handles_classification": false,
  "handles_regression": false,
  "handles_multiclass": false,
  "handles_multilabel": false,
  "input_type": [
    "DENSE",
    "SPARSE"
  ],
  "output_type": [
    "FEATURES"
  ],
  "team": "ISI",
  "schema_version": 1.0,
  "build": [{
    "type": "pip",
    "package": "corexdiscrete"
  }],
  "compute_resources": {
    "sample_size": [100, 100000],
    "sample_unit": ["MB", "MB"],
    "num_nodes": [1, 1],
    "cores_per_node": [4, 4],
    "gpus_per_node": [0, 0],
    "mem_per_node": [1, 1000],
    "disk_per_node": [1, 1000],
    "mem_per_gpu": [0, 0],
    "expected_running_time": [1, 1]
  },
  "interface_type": "dimensionality_reduction"
}
